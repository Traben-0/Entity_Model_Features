architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/entity_model_features_${project.mc_build}.accesswidener")
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    // Remove the next line if you don't want to depend on the API
    //modApi "dev.architectury:architectury:${rootProject.architectury_version}"

    //modImplementation ("maven.modrinth:entitytexturefeatures:${project.entitytexturefeatures_version}")
    modImplementation files("run/entity_texture_features_fabric_1.21.5-rc1-6.2.11.jar") //todo temp for 1.21.5 testing

    modImplementation("maven.modrinth:physicsmod:dBxi3s11")
    modImplementation("maven.modrinth:ebe:${rootProject.ebe_version}")
    modImplementation("maven.modrinth:iris:${rootProject.iris_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
